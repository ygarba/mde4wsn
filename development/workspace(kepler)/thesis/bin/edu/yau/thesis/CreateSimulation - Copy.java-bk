package edu.yau.thesis;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class CreateSimulation extends Thread {
	
	public void run(){
		
		String execCmd = "";
		final String appPath = System.getenv("WSN_HOME"); 
		final String cygwinPath = System.getenv("CYGWIN32_HOME");
		String m2tPath = appPath + "/contiki-2.7/phd/m2t";
		m2tPath = m2tPath.replace("\\", "/");
				
		OsCheck.OSType ostype=OsCheck.getOperatingSystemType();
		if (ostype == OsCheck.OSType.Windows) {					
			execCmd = cygwinPath + "/bin/bash --login -i -c " + m2tPath + "/simCreate_win.sh";			
		} else if (ostype == OsCheck.OSType.Linux) {		
			execCmd = "bash " + m2tPath + "/simCreate_linux.sh";
		}
			
		try {
	    	
			Runtime runTime = Runtime.getRuntime();
			Process process = runTime.exec(execCmd);
			InputStream inputStream = process.getInputStream();
			InputStreamReader isr = new InputStreamReader(inputStream);
			InputStream errorStream = process.getErrorStream();
			InputStreamReader esr = new InputStreamReader(errorStream);
			//InputStreamReader isr = new InputStreamReader(process.getInputStream());	
			//BufferedReader br = new BufferedReader (isr);	 
			
			int n1;
			char[] c1 = new char[1024];
			StringBuffer standardOutput = new StringBuffer();
			while ((n1 = isr.read(c1)) > 0) {
				standardOutput.append(c1, 0, n1);
			}
			System.out.println("Standard Output: " + standardOutput.toString());
	
			int n2;
			char[] c2 = new char[1024];
			StringBuffer standardError = new StringBuffer();
			while ((n2 = esr.read(c2)) > 0) {
				standardError.append(c2, 0, n2);
			}
			System.out.println("Standard Error: " + standardError.toString());
				
		}catch (IOException ioe){
			System.err.println(ioe);
			ioe.printStackTrace();
			//EverLogger.logEntry("Yau: Cygwin error");
		}catch (Throwable t) {
			t.printStackTrace();
			//EverLogger.logEntry("Yau: Cygwin error2");
		}
		
	}//run
}
